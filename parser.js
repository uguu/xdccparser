// Generated by CoffeeScript 1.3.3

$(document).ready(function() {
  var datatable, infotable, packlistArr, parseBotlist;
  datatable = $('#packlisttable').dataTable({
    'bFilter': true,
    'sDom': 'lrt',
    'bPaginate': false,
    'oSearch': {
      'bRegex': true
    }
  });
  infotable = $('#infotable').dataTable({
    'bFilter': false,
    'sDom': 'lrt',
    'bPaginate': false,
    'bSort': false
  });
  $('#searchbox').keyup(function() {
    return datatable.fnFilter(this.value, 2, true, true);
  });
  $('#packlisttable tbody').click(function(event) {
    var botnick, num, str;
    num = event.target.parentNode.childNodes[0].childNodes[0].nodeValue;
    botnick = event.target.parentNode.childNodes[0].childNodes[2].nodeValue;
    str = '/msg ' + botnick + ' XDCC SEND ' + num;
    return window.prompt('Copy and paste this into your IRC client', str);
  });
  packlistArr = [];
  parseBotlist = function(botlistArr) {
    var fail, fetch, fin, grabbed, i, parse, success, tograb, _i, _results;
    grabbed = 0;
    tograb = botlistArr.length;
    success = 0;
    fail = 0;
    fin = function() {
      console.log(tograb + 'vs' + grabbed);
      if (tograb === grabbed) {
        console.log(packlistArr);
        return console.log(botlistArr);
      }
    };
    parse = function(json) {
      var i, newgrab, _i, _j, _len;
      console.log(json);
      newgrab = 0;
      for (_i = 0, _len = json.length; _i < _len; _i++) {
        i = json[_i];
        console.log(i.type + ':' + i.loc);
        switch (i.type) {
          case "packlist":
            packlistArr.push(i.loc);
            break;
          case "botlist":
            botlistArr.push(i);
            tograb++;
            newgrab++;
        }
      }
      for (i = _j = 0; 0 <= newgrab ? _j < newgrab : _j > newgrab; i = 0 <= newgrab ? ++_j : --_j) {
        fetch(botlistArr[grabbed + i].loc, parse);
      }
      return fin();
    };
    fetch = function(url, cb) {
      return $.getJSON(url).always(function(json) {
        grabbed++;
        $('#processed').text(grabbed);
        return $('#total').text(tograb);
      }).done(function(json) {
        success++;
        $('#success').text(success);
        return cb(json);
      }).fail(function() {
        fail++;
        return $('#fail').text(fail);
      });
    };
    _results = [];
    for (i = _i = 0; 0 <= tograb ? _i < tograb : _i > tograb; i = 0 <= tograb ? ++_i : --_i) {
      _results.push(fetch(botlistArr[i].loc, parse));
    }
    return _results;
  };
  return parseBotlist([
    {
      loc: 'botlist.json',
      type: 'botlist'
    }
  ]);
});
